FUNCTION_BLOCK TOUper	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	contactDuration : REAL;
	intercontactDuration : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	TOU : REAL;
END_VAR

FUZZIFY contactDuration			
	TERM vlow := (0, 1) (0, 1) (100, 1) (200, 0) ; 
	TERM low := (100, 0) (200, 1) (400, 1) (500, 0) ; 
	TERM medium := (400, 0) (500, 1) (1100, 1) (1200, 0);
	TERM high := (1100, 0) (1200, 1) (1500, 1) (1600, 0);
	TERM vhigh := (1500, 0) (1600, 1) (4000 ,1) (4000, 1);
END_FUZZIFY

FUZZIFY intercontactDuration			
	TERM vlow := (0, 1) (0, 1) (200000, 1) (300000, 0) ; 
	TERM low := (200000, 0) (300000, 1) (500000, 1) (600000, 0) ; 
	TERM medium := (500000, 0) (600000, 1) (1200000, 1) (1300000, 0);
	TERM high := (1200000, 0) (1300000, 1) (1500000, 1) (1600000, 0);
	TERM vhigh := (1500000, 0) (1600000, 1) (2100000 ,1) (2100000, 1);
END_FUZZIFY

DEFUZZIFY TOU			
	TERM worst := (0, 1) (0, 1) (0.1, 1) (0.3, 0);
	TERM worse := (0.1 ,0) (0.3, 1) (0.5, 0);
	TERM fair := (0.3, 0) (0.5, 1) (0.7, 0);
	TERM good := (0.5, 0) (0.7, 1) (0.9, 0);
	TERM excellent := (0.7, 1) (0.9, 1) (1, 1) (1 ,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
	RANGE := (-1.0 .. 1.0);	// Just used to check 'RANGE' grammar
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF contactDuration IS vlow AND intercontactDuration IS vlow THEN TOU is worst;
	RULE 1 : IF contactDuration IS vlow AND intercontactDuration IS low THEN TOU is worse;
	RULE 1 : IF contactDuration IS vlow AND intercontactDuration IS medium THEN TOU is good;
	RULE 1 : IF contactDuration IS vlow AND intercontactDuration IS high THEN TOU is fair;
	RULE 1 : IF contactDuration IS vlow AND intercontactDuration IS vhigh THEN TOU is worst;
	RULE 1 : IF contactDuration IS low AND intercontactDuration IS vlow THEN TOU is worse;
	RULE 1 : IF contactDuration IS low AND intercontactDuration IS low THEN TOU is fair;
	RULE 1 : IF contactDuration IS low AND intercontactDuration IS medium THEN TOU is excellent;
	RULE 1 : IF contactDuration IS low AND intercontactDuration IS high THEN TOU is excellent;
	RULE 1 : IF contactDuration IS low AND intercontactDuration IS vhigh THEN TOU is excellent;
	RULE 1 : IF contactDuration IS medium AND intercontactDuration IS vlow THEN TOU is worse;
	RULE 1 : IF contactDuration IS medium AND intercontactDuration IS low THEN TOU is good;
	RULE 1 : IF contactDuration IS medium AND intercontactDuration IS medium THEN TOU is excellent;
	RULE 1 : IF contactDuration IS medium AND intercontactDuration IS high THEN TOU is excellent;
	RULE 1 : IF contactDuration IS medium AND intercontactDuration IS vhigh THEN TOU is good;
	RULE 1 : IF contactDuration IS high AND intercontactDuration IS vlow THEN TOU is worst;
	RULE 1 : IF contactDuration IS high AND intercontactDuration IS low THEN TOU is worse;
	RULE 1 : IF contactDuration IS high AND intercontactDuration IS medium THEN TOU is good;
	RULE 1 : IF contactDuration IS high AND intercontactDuration IS high THEN TOU is good;
	RULE 1 : IF contactDuration IS high AND intercontactDuration IS vhigh THEN TOU is fair;
	RULE 1 : IF contactDuration IS vhigh AND intercontactDuration IS vlow THEN TOU is worst;
	RULE 1 : IF contactDuration IS vhigh AND intercontactDuration IS low THEN TOU is worst;
	RULE 1 : IF contactDuration IS vhigh AND intercontactDuration IS medium THEN TOU is fair;
	RULE 1 : IF contactDuration IS vhigh AND intercontactDuration IS high THEN TOU is fair;
	RULE 1 : IF contactDuration IS vhigh AND intercontactDuration IS vhigh THEN TOU is worse;
END_RULEBLOCK

END_FUNCTION_BLOCK


